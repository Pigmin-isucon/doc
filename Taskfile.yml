version: '3'

vars:
  # 実行環境によって変更してください
  WEBAPP_DIR: /home/isucon/isucari/webapp
  ISUCON_DIR: /home/isucon/isucari
  GO_BUILD_DIR: /home/isucon/isucari/webapp/go
  GO_BINARY_NAME: isucari
  DB_USER: root
  DB_PASS: isucon
  DB_NAME: isucon

tasks:
  bench:
    desc: ベンチマーク前に実行します
    cmds:
      - task: mv-logs
      - task: build
      - task: restart

  build:
    desc: buildします
    dir: '{{.GO_BUILD_DIR}}'
    cmds:
      - go build -o {{.GO_BINARY_NAME}}

  # goのserviceもここに追加する
  restart:
    desc: nginxとmysqlを再起動します
    cmds:
      - sudo systemctl restart nginx
      - sudo systemctl restart mysql

  mysql:
    desc: mysqlに接続します
    cmds:
      - mysql -u {{.DB_USER}} -p{{.DB_PASS}} {{.DB_NAME}}

  pprof:
    desc: pprofを実行します
    cmds:
      - go tool pprof -http=:6070 http://localhost:6060/debug/pprof/profile?seconds=60

  fgprof:
    desc: fgprofを実行します
    cmds:
      - go tool pprof -http=:6071 http://localhost:6060/debug/fgprof?seconds=60

  cat-alp:
    desc: 最新のaccess.logを表示します
    aliases:
      - ca
    cmds:
      - ls -t {{.ISUCON_DIR}}/logs/alp | head -n 1 | xargs cat
    
  cat-slow:
    desc: 最新のslow.logを表示します
    aliases:
      - cs
    cmds:
      - ls -t {{.ISUCON_DIR}}/logs/slow | head -n 1 | xargs cat

  slow-on:
    desc: slow-query-logを有効にします
    cmds:
      - sudo mysql -e "set global long_query_time = 0; set global slow_query_log = 1; set global slow_query_log_file = '/var/log/mysql/mysql-slow.log';"

  slow-off:
    desc: slow-query-logを無効にします
    cmds:
      - sudo mysql -e "set global slow_query_log = 0;"

  mv-logs:
    desc: ログローテーションします
    deps: [mv-nginx-logs, mv-slow-logs]

  # 実行する前に -m でURIをグループ化すること!
  mv-nginx-logs:
    silent: true
    cmds:
      - cmd: |
          idx=$(ls {{.ISUCON_DIR}}/logs/alp | grep -oE '[0-9]+' | awk '{print $1}' | sort -n | tail -n 1)
          if [ -z "$idx" ]; then
            idx=0
          fi
          idx=$((idx+1))
          if [ -e /var/log/nginx/access.log ]; then
            sudo cat /var/log/nginx/access.log | \
              alp ltsv \
              --sort sum -r > {{.ISUCON_DIR}}/logs/alp/access.log.$idx
            sudo rm /var/log/nginx/access.log
          fi

  mv-slow-logs:
    silent: true
    cmds:
      - cmd: |
          idx=$(ls {{.ISUCON_DIR}}/logs/slow | grep -oE '[0-9]+' | awk '{print $1}' | sort -n | tail -n 1)
          if [ -z "$idx" ]; then
            idx=0
          fi
          idx=$((idx+1))
          if [ -e /var/log/mysql/mysql-slow.log ]; then
            sudo pt-query-digest --filter 'length($event->{arg}) < 3000' /var/log/mysql/mysql-slow.log \
              > {{.ISUCON_DIR}}/logs/slow/slow.log.$idx
            sudo rm /var/log/mysql/mysql-slow.log
          fi

  keygen:
    desc: github用のssh鍵を生成します
    cmds:
      - cmd: |
          if [ -e ~/.ssh/id_ed25519 ]; then
            cat ~/.ssh/id_ed25519.pub
          else
            ssh-keygen -t ed25519
            cat ~/.ssh/id_ed25519.pub
          fi
        silent: true
    run: once

  git-config:
    desc: gitの設定を行います
    cmds:
      - git config --global user.email "lingmukangtai825@gmail.com"
      - git config --global user.name "pirosiki197"
      - git config --global init.defaultBranch main

  go-update:
    desc: goを最新バージョンにします
    cmds:
      - command -v go | xargs sudo rm -rf
      - wget https://golang.org/dl/go1.21.4.linux-amd64.tar.gz
      - sudo tar -C /usr/local -xzf go1.21.4.linux-amd64.tar.gz
      - rm go1.21.4.linux-amd64.tar.gz

  setup:
    desc: setupを行います 実行前にTaskfileの変数を確認してください
    prompt: Taskfileの変数は正しいですか?
    deps: [install-pt-query-log, install-alp, install-graphviz]
    cmds:
      - sudo apt upgrade
      - mkdir -p {{.ISUCON_DIR}}/logs/alp {{.ISUCON_DIR}}/logs/slow
    run: when_changed

  install-pt-query-log:
    internal: true
    cmds:
      - wget https://github.com/percona/percona-toolkit/archive/refs/tags/v3.5.5.tar.gz
      - tar zxvf v3.5.5.tar.gz
      - sudo install ./percona-toolkit-3.5.5/bin/pt-query-digest /usr/local/bin
      - rm -rf percona-toolkit-3.5.5/ v3.5.5.tar.gz

  install-alp:
    internal: true
    cmds:
      - wget https://github.com/tkuchiki/alp/releases/download/v1.0.21/alp_linux_amd64.tar.gz
      - tar zxvf alp_linux_amd64.tar.gz
      - sudo install alp /usr/local/bin
      - rm alp alp_linux_amd64.tar.gz

  install-graphviz:
    internal: true
    cmds:
      - sudo apt update
      - sudo apt install graphviz
